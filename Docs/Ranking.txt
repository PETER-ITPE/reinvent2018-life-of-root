/*
    - 게임 결과 업데이트 및 랭킹 재집계 방식 설명
    - cast 결과를 위하여 tb_cast 테이블에 기준값 컬럼 2개 추가(min/max_score)
    - 상대 평가(?)로 변경할 경우 위의 특정 비율 값을 명시한 컬럼이 추가되어야 함 (상위 10%, 20% 등)
*/
-- 게임 결과 tb_game_result에 추가
SET @total_score = 200;
SET @game_id = 70;

SELEECT @result_page_url := result_page_url,
        @cast_result := cast_result,
        @grade_result := grade_result,
        @gender_result := gender_result,
        @age_result := age_result
FROM    tb_cast 
WHERE   @total_score BETWEEN min_score and max_score;

INSERT INTO tb_game_result(game_id, result_page_url, total_score, total_rank, cast_result, grade_result, gender_result, age_result)
VALUES(@game_id,@result_page_url,@total_score,null,@cast_result,@grade_result,@gender_result,@age_result);

-- 신규 랭킹 정보 생성:프로시저로 구현
DROP PROCEDURE IF EXISTS sp_refresh_ranking;

DELIMITER //
CREATE PROCEDURE sp_refresh_ranking()
  BEGIN  
    -- 기존 임시 테이블 삭제
    DROP TABLE IF EXISTS tb_game_result_tmp;
    DROP TABLE IF EXISTS tb_game_result_old;

    -- 신규 랭킹 테이블 생성
    CREATE TABLE tb_game_result_tmp
    SELECT b.game_id,
           a.result_page_url,
           a.total_score,
           RANK() OVER (ORDER BY a.total_score DESC, a.game_id ASC) AS total_rank,
           a.cast_result,
           a.grade_result,
           a.gender_result,
           a.age_result
    FROM  tb_game_result a 
          INNER JOIN tb_game b on a.game_id=b.game_id
    WHERE b.share_yn = 'Y'
    GROUP BY a.game_id
    ORDER BY a.total_score DESC;

    -- 기존 서비스 랭킹+게임 결과 테이블과 replace
    RENAME TABLE tb_game_result TO tb_game_result_old;
    RENAME TABLE tb_game_result_tmp TO tb_game_result;

    -- PK 설정
    ALTER TABLE tb_game_result ADD PRIMARY KEY(game_id);
    
    -- 임시테이블 삭제
    DROP TABLE tb_game_result_old;
    COMMIT;    
  END//
DELIMITER ;
